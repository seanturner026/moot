Resources:
  CloudfrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases:
          - ${self:custom.DOMAIN}
        Origins:
          - Id: !Sub S3-${S3StaticSite.DomainName}
            DomainName: !GetAtt S3StaticSite.DomainName
            OriginCustomHeaders:
              - HeaderName: X-Frame-Options
                HeaderValue: SAMEORIGIN
              - HeaderName: X-Content-Type-Options
                HeaderValue: nosniff
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudfrontOriginAccessIdentity}
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: "false"
          TargetOriginId: !Sub S3-${S3StaticSite.DomainName}
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: "true"
        HttpVersion: http2
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
        WebACLId: !GetAtt WAFWebACL.Arn
      Tags:
        - Key: Name
          Value: ${self:service}-${self:provider.stage}

  CloudfrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Restrict Access to S3 bucket ${self:service}-${self:provider.stage}-${self:custom.ACCOUNT_ID}
